{"errors": [{"code": 2, "level": "error", "message": "Failed to download config from https://semgrep.dev/p/ci: \u001b[31msemgrep error\u001b[0m: Invalid rule schema\n  --> https://semgrep.dev/...:4117\n\u001b[94m4117 | \u001b[0m- id: java.spring.security.injection.tainted-system-command.tainted-system-command\n\u001b[94m4118 | \u001b[0m  languages:\n\u001b[94m4119 | \u001b[0m  - java\n\u001b[94m4120 | \u001b[0m  severity: ERROR\n\u001b[94m4121 | \u001b[0m  mode: taint\n\u001b[94m4122 | \u001b[0m  pattern-propagators:\n\u001b[94m4123 | \u001b[0m  - pattern: (StringBuilder $STRB).append($INPUT)\n\u001b[94m4124 | \u001b[0m    from: $INPUT\n\u001b[94m4125 | \u001b[0m    to: $STRB\n\u001b[94m4126 | \u001b[0m  pattern-sources:\n\u001b[94m4127 | \u001b[0m  - patterns:\n\u001b[94m4128 | \u001b[0m    - pattern-either:\n\u001b[94m4129 | \u001b[0m      - pattern-inside: |\n\u001b[94m4130 | \u001b[0m          $METHODNAME(..., @$REQ($LOOKUP) $TYPE $SOURCE,...) {\n\u001b[94m4131 | \u001b[0m            ...\n\u001b[94m4132 | \u001b[0m          }\n\u001b[94m4133 | \u001b[0m      - pattern-inside: |\n\u001b[94m4134 | \u001b[0m          $METHODNAME(..., @$REQ $TYPE $SOURCE,...) {\n\u001b[94m4135 | \u001b[0m            ...\n\u001b[94m4136 | \u001b[0m          }\n\u001b[94m4137 | \u001b[0m    - metavariable-regex:\n\u001b[94m4138 | \u001b[0m        metavariable: $REQ\n\u001b[94m4139 | \u001b[0m        regex: (RequestBody|PathVariable|RequestParam|RequestHeader|CookieValue|ModelAttribute)\n\u001b[94m4140 | \u001b[0m    - pattern: $SOURCE\n\u001b[94m4141 | \u001b[0m    label: INPUT\n\u001b[94m4142 | \u001b[0m  - patterns:\n\u001b[94m4143 | \u001b[0m    - pattern-either:\n\u001b[94m4144 | \u001b[0m      - pattern: $X + $SOURCE\n\u001b[94m4145 | \u001b[0m      - pattern: $SOURCE + $Y\n\u001b[94m4146 | \u001b[0m      - pattern: (StringBuilder $STRB).append($SOURCE)\n\u001b[94m4147 | \u001b[0m      - pattern: String.format(\"...\", ..., $SOURCE, ...)\n\u001b[94m4148 | \u001b[0m      - pattern: String.join(\"...\", ..., $SOURCE, ...)\n\u001b[94m4149 | \u001b[0m      - pattern: (String $STR).concat($SOURCE)\n\u001b[94m4150 | \u001b[0m      - pattern: $SOURCE.concat(...)\n\u001b[94m4151 | \u001b[0m      - pattern: $X += SOURCE\n\u001b[94m4152 | \u001b[0m      - pattern: $SOURCE += $X\n\u001b[94m4153 | \u001b[0m    label: CONCAT\n\u001b[94m4154 | \u001b[0m    requires: INPUT\n\u001b[94m4155 | \u001b[0m  pattern-sinks:\n\u001b[94m4156 | \u001b[0m  - patterns:\n\u001b[94m4157 | \u001b[0m    - pattern-either:\n\u001b[94m4158 | \u001b[0m      - pattern: |\n\u001b[94m4159 | \u001b[0m          (Process $P) = new Process(...);\n\u001b[94m4160 | \u001b[0m      - pattern: |\n\u001b[94m4161 | \u001b[0m          (ProcessBuilder $PB).command(...);\n\u001b[94m4162 | \u001b[0m      - patterns:\n\u001b[94m4163 | \u001b[0m        - pattern-either:\n\u001b[94m4164 | \u001b[0m          - pattern: |\n\u001b[94m4165 | \u001b[0m              (Runtime $R).$EXEC(...);\n\u001b[94m4166 | \u001b[0m          - pattern: |\n\u001b[94m4167 | \u001b[0m              Runtime.getRuntime(...).$EXEC(...);\n\u001b[94m4168 | \u001b[0m        - metavariable-regex:\n\u001b[94m4169 | \u001b[0m            metavariable: $EXEC\n\u001b[94m4170 | \u001b[0m            regex: (exec|loadLibrary|load)\n\u001b[94m4171 | \u001b[0m      - patterns:\n\u001b[94m4172 | \u001b[0m        - pattern: |\n\u001b[94m4173 | \u001b[0m            (ProcessBuilder $PB).command(...).$ADD(...);\n\u001b[94m4174 | \u001b[0m        - metavariable-regex:\n\u001b[94m4175 | \u001b[0m            metavariable: $ADD\n\u001b[94m4176 | \u001b[0m            regex: (add|addAll)\n\u001b[94m4177 | \u001b[0m      - patterns:\n\u001b[94m4178 | \u001b[0m        - pattern-either:\n\u001b[94m4179 | \u001b[0m          - patterns:\n\u001b[94m4180 | \u001b[0m            - pattern-inside: |\n\u001b[94m4181 | \u001b[0m                $BUILDER = new ProcessBuilder(...);\n\u001b[94m4182 | \u001b[0m                ...\n\u001b[94m4183 | \u001b[0m            - pattern: $BUILDER.start(...)\n\u001b[94m4184 | \u001b[0m          - pattern: |\n\u001b[94m4185 | \u001b[0m              new ProcessBuilder(...). ... .start(...);\n\u001b[94m4186 | \u001b[0m    requires: CONCAT\n\u001b[94m4187 | \u001b[0m  message: 'Detected user input entering a method which executes a system command.\n\u001b[94m4188 | \u001b[0m    This could result in a command injection vulnerability, which allows an attacker\n\u001b[94m4189 | \u001b[0m    to inject an arbitrary system command onto the server. The attacker could download\n\u001b[94m4190 | \u001b[0m    malware onto or steal data from the server. Instead, use ProcessBuilder, separating\n\u001b[94m4191 | \u001b[0m    the command into individual arguments, like this: `new ProcessBuilder(\"ls\", \"-al\",\n\u001b[94m4192 | \u001b[0m    targetDirectory)`. Further, make sure you hardcode or allowlist the actual command\n\u001b[94m4193 | \u001b[0m    so that attackers can''t run arbitrary commands.'\n\u001b[94m4194 | \u001b[0m  metadata:\n\u001b[94m4195 | \u001b[0m    cwe:\n\u001b[94m4196 | \u001b[0m    - 'CWE-78: Improper Neutralization of Special Elements used in an OS Command (''OS\n\u001b[94m4197 | \u001b[0m      Command Injection'')'\n\u001b[94m4198 | \u001b[0m    owasp:\n\u001b[94m4199 | \u001b[0m    - A01:2017 - Injection\n\u001b[94m4200 | \u001b[0m    - A03:2021 - Injection\n\u001b[94m4201 | \u001b[0m    category: security\n\u001b[94m4202 | \u001b[0m    technology:\n\u001b[94m4203 | \u001b[0m    - java\n\u001b[94m4204 | \u001b[0m    - spring\n\u001b[94m4205 | \u001b[0m    confidence: HIGH\n\u001b[94m4206 | \u001b[0m    references:\n\u001b[94m4207 | \u001b[0m    - https://www.stackhawk.com/blog/command-injection-java/\n\u001b[94m4208 | \u001b[0m    - https://cheatsheetseries.owasp.org/cheatsheets/OS_Command_Injection_Defense_Cheat_Sheet.html\n\u001b[94m4209 | \u001b[0m    - https://github.com/github/codeql/blob/main/java/ql/src/Security/CWE/CWE-078/ExecUnescaped.java\n\u001b[94m4210 | \u001b[0m    cwe2022-top25: true\n\u001b[94m4211 | \u001b[0m    cwe2021-top25: true\n\u001b[94m4212 | \u001b[0m    subcategory:\n\u001b[94m4213 | \u001b[0m    - vuln\n\u001b[94m4214 | \u001b[0m    likelihood: HIGH\n\u001b[94m4215 | \u001b[0m    impact: HIGH\n\u001b[94m4216 | \u001b[0m    deepsemgrep: true\n\u001b[94m4217 | \u001b[0m    license: Commons Clause License Condition v1.0[LGPL-2.1-only]\n\u001b[94m4218 | \u001b[0m    source: https://semgrep.dev/r/java.spring.security.injection.tainted-system-command.tainted-system-\ncommand\n\u001b[94m4219 | \u001b[0m    shortlink: https://sg.run/epY0\n\u001b[94m4220 | \u001b[0m    semgrep.dev:\n\u001b[94m4221 | \u001b[0m      rule:\n\u001b[94m4222 | \u001b[0m        rule_id: 6JUxGN\n\u001b[94m4223 | \u001b[0m        version_id: YDTK40\n\u001b[94m4224 | \u001b[0m        url: https://semgrep.dev/playground/r/YDTK40/java.spring.security.injection.tainted-system-\ncommand.tainted-system-command\n\u001b[94m4225 | \u001b[0m- id: kotlin.lang.security.weak-rsa.use-of-weak-rsa-key\n\n\u001b[31mAdditional properties are not allowed ('pattern-propagators' was unexpected)\u001b[0m\n", "type": "SemgrepError"}, {"code": 7, "level": "error", "message": "no valid configuration file found (1 configs were invalid)", "type": "SemgrepError"}], "results": []}
